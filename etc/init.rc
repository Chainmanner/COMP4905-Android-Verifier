# NOTE: The init.rc from the AOSP recovery was used as a reference.
# Some snippets copied almost verbatim; in those cases, comments have been omitted.

import /init.recovery.${ro.hardware}.rc

on early-init
	restorecon /postinstall
	start ueventd
	setprop sys.usb.configfs 0

# Inits environment variables, symlinks, directories, and the tmpfs mountpoint.
on init
	export ANDROID_ROOT /system
	export ANDROID_DATA /data
	export EXTERNAL_STORAGE /sdcard

	symlink /proc/self/fd/0 /dev/stdin
	symlink /proc/self/fd/1 /dev/stdout
	symlink /proc/self/fd/2 /dev/stderr

	symlink /system/bin /bin
	symlink /system/etc /etc

	mount cgroup none /acct cpuacct
	mkdir /acct/uid

	mkdir /sdcard
	mkdir /system
	mkdir /data
	mkdir /cache
	mkdir /sideload
	mkdir /mnt/system
	mount tmpfs tmpfs /tmp

	chown root shell /tmp
	chmod 0775 /tmp

	write /proc/sys/kernel/panic_on_oops 1
	write /proc/sys/vm/max_map_count 1000000

on boot
	ifup lo
	hostname localhost
	domainname localdomain
	class_start default

on load_system_props_action
	load_system_props

on firmware_mounts_complete
	rm /dev/.booting

on late-init
	trigger early-fs
	trigger fs
	trigger post-fs
	trigger post-fs-data

	trigger load_system_props_action

	trigger firmware_mounts_complete

	trigger early-boot
	trigger boot

service ueventd /system/bin/ueventd
	critical
	seclabel u:r:ueventd:s0

service charger /system/bin/charger
	critical
	seclabel u:r:charger:s0

service recovery /system/bin/recovery
	socket recovery stream 422 system system
	seclabel u:r:recovery:s0

on fs && property:sys.usb.configfs=1
	mount configfs none /config
	mkdir /config/usb_gadget/g1 0770 shell shell
	write /config/usb_gadget/g1/idVendor 0x18D1
	mkdir /config/usb_gadget/g1/strings/0x409 0770
	write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
	write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
	write /config/usb_gadget/g1/strings/0x409/product ${ro.product.model}
	mkdir /config/usb_gadget/g1/functions/ffs.VERIFIER
	mkdir /config/usb_gadget/g1/configs/b.1 0777 shell shell
	mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770 shell shell

on fs && property:sys.usb.configfs=0
	write /sys/class/android_usb/android0/f_ffs/aliases VERIFIER
	write /sys/class/android_usb/android0/idVendor 18D1
	write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
	write /sys/class/android_usb/android0/iProduct ${ro.product.model}
	write /sys/class/android_usb/android0/iSerial ${ro.serialno}

on fs
	mkdir /dev/usb-ffs 0775 shell shell
	mkdir /dev/usb-ffs/VERIFIER 0770 shell shell
	mount functionfs VERIFIER /dev/usb-ffs/VERIFIER uid=2000,gid=2000


# Non-configfs triggers, in case it's not available.

on property:sys.usb.config=none && property:sys.usb.configfs=0
	write /sys/class/android_usb/android0/enable 0
	setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=VERIFIER && property:sys.usb.configfs=0
	write /sys/class/android_usb/android0/idProduct E666
	write /sys/class/android_usb/android0/enable 1
	setprop sys.usb.state ${sys.usb.config}


# Configfs triggers.

on property:sys.usb.config=none && property:sys.usb.configfs=1
	write /config/usb_gadget/g1/UDC "none"
	setprop sys.usb.ffs.ready 0
	rm /config/usb_gadget/g1/configs/b.1/f1
	setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=VERIFIER && property:sys.usb.ffs.ready=1 && property:sys.usb.configfs=1
	write /config/usb_gadget/g1/idProduct 0xE666
	write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "VERIFIER"
	symlink /config/usb_gadget/g1/functions/ffs.VERIFIER /config/usb_gadget/g1/configs/b.1/f1
	write /config/usb_gadget/g1/UDG ${sys.usb.controller}
	setprop sys.usb.state ${sys.usb.config}
